@using Microsoft.AspNet.Identity
@if (Request.IsAuthenticated)
{
    using (Html.BeginForm("LogOff", "Account", FormMethod.Post, new { id = "logoutForm", @class = "navbar-right" }))
    {
    @Html.AntiForgeryToken()

    <ul class="nav navbar-nav navbar-right">
        <li>
            @Html.ActionLink("Hello " + User.Identity.GetUserName() + "!", "Index", "Manage", routeValues: null, htmlAttributes: new {title = "Manage"})
        </li>
        @if ((bool)ViewData["isSubscribed"])
        {
            <li id="pool"><a href="#" id="unsubscribe">In battle pool (exit)</a></li>
        }
        else
        {
            <li id="pool"><a href="#" id="subscribe">Subscribe for battle</a></li>
        }
        <li><a href="javascript:document.getElementById('logoutForm').submit()">Log off</a></li>
    </ul>
    }
}
else
{
    <ul class="nav navbar-nav navbar-right">
        <li>@Html.ActionLink("Register", "Register", "Account", routeValues: null, htmlAttributes: new { id = "registerLink" })</li>
        <li>@Html.ActionLink("Log in", "Login", "Account", routeValues: null, htmlAttributes: new { id = "loginLink" })</li>
    </ul>
}
<!--Reference the autogenerated SignalR hub script. -->
@Scripts.Render("~/Scripts/jquery.signalR-2.2.0.min.js")
@Scripts.Render("~/signalr/hubs")
<script>
    function attachClientPoolEvents(pool) {
        $("#subscribe").click(function () {
            console.log("subscribe clicked");
            pool.server.subscribe().done(function () {
                $("#pool").html('<a href="#" id="unsubscribe">In battle pool (exit)</a>');
                attachClientPoolEvents(pool);
            });
        });

        $("#unsubscribe").click(function () {
            console.log("unsubs clicked");
            pool.server.unsubscribe().done(function() {
                attachClientPoolEvents(pool);
            });
        });
    }
    $(function () {
        // Reference the auto-generated proxy for the hub.
        var pool = $.connection.poolHub;
        console.log(pool);
        // Create a function that the hub can call back to display messages.
        pool.client.notify = function (playerId) {
            pool.server.checkAvailability(playerId);
        };

        pool.client.startBattle = function (opponentName, battleId) {
            console.log("started");
            battleId = Number(battleId);
            alert("Opponent found " + opponentName);
            var link = "@Url.Action("Duel","Battle", new {area = "Battles", id = -666})";

            window.location.href = link.replace(-666, battleId);
        };

        pool.client.detach = function () {
            $("#pool").html('<a href="#" id="subscribe">Subscribe for battle</a>');
        }

        $.connection.hub.start().done(function () {
            pool.server.connect();
            attachClientPoolEvents(pool);
        });
    });

    // This optional function html-encodes messages for display in the page.
    function htmlEncode(value) {
        var encodedValue = $('<div />').text(value).html();
        return encodedValue;
    }
</script>
